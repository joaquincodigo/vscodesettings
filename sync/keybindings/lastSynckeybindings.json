{"ref":"b1f0180d-7ea9-42d2-b344-3d1f1e7b07f9","syncData":{"version":2,"machineId":"2be9c9dd-158e-4694-bbf1-34e32b2f97ed","content":"{\"linux\":\"// Place your key bindings in this file to override the defaults\\n[\\n\\t{\\n\\t\\t\\\"key\\\": \\\"[Backquote]\\\",\\n\\t\\t\\\"command\\\": \\\"workbench.action.toggleZenMode\\\",\\n\\t\\t\\\"when\\\": \\\"!isAuxiliaryWindowFocusedContext\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+k z\\\",\\n\\t\\t\\\"command\\\": \\\"-workbench.action.toggleZenMode\\\",\\n\\t\\t\\\"when\\\": \\\"!isAuxiliaryWindowFocusedContext\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+c\\\",\\n\\t\\t\\\"command\\\": \\\"-extension.vim_ctrl+c\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+[Semicolon]\\\",\\n\\t\\t\\\"command\\\": \\\"workbench.action.terminal.openNativeConsole\\\",\\n\\t\\t\\\"when\\\": \\\"!terminalFocus\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+c\\\",\\n\\t\\t\\\"command\\\": \\\"-workbench.action.terminal.openNativeConsole\\\",\\n\\t\\t\\\"when\\\": \\\"!terminalFocus\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+[Semicolon]\\\",\\n\\t\\t\\\"command\\\": \\\"workbench.action.terminal.toggleTerminal\\\",\\n\\t\\t\\\"when\\\": \\\"terminal.active\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+`\\\",\\n\\t\\t\\\"command\\\": \\\"-workbench.action.terminal.toggleTerminal\\\",\\n\\t\\t\\\"when\\\": \\\"terminal.active\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+w\\\",\\n\\t\\t\\\"command\\\": \\\"-extension.vim_ctrl+w\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+u\\\",\\n\\t\\t\\\"command\\\": \\\"-cursorUndo\\\",\\n\\t\\t\\\"when\\\": \\\"textInputFocus\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+u\\\",\\n\\t\\t\\\"command\\\": \\\"-list.focusPageUp\\\",\\n\\t\\t\\\"when\\\": \\\"listFocus && !inputFocus\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+p\\\",\\n\\t\\t\\\"command\\\": \\\"-extension.vim_ctrl+p\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+u\\\",\\n\\t\\t\\\"command\\\": \\\"extension.vim_ctrl+u\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+u\\\",\\n\\t\\t\\\"command\\\": \\\"-extension.vim_ctrl+u\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+k\\\",\\n\\t\\t\\\"command\\\": \\\"extension.vim_ctrl+p\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+j\\\",\\n\\t\\t\\\"command\\\": \\\"extension.vim_ctrl+n\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+n\\\",\\n\\t\\t\\\"command\\\": \\\"-extension.vim_ctrl+n\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+j\\\",\\n\\t\\t\\\"command\\\": \\\"-workbench.action.togglePanel\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+j\\\",\\n\\t\\t\\\"command\\\": \\\"-extension.vim_ctrl+j\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+j\\\",\\n\\t\\t\\\"command\\\": \\\"workbench.action.quickOpenNavigateNextInFilePicker\\\",\\n\\t\\t\\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+p\\\",\\n\\t\\t\\\"command\\\": \\\"-workbench.action.quickOpenNavigateNextInFilePicker\\\",\\n\\t\\t\\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+k\\\",\\n\\t\\t\\\"command\\\": \\\"workbench.action.quickOpenNavigatePreviousInFilePicker\\\",\\n\\t\\t\\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+e\\\",\\n\\t\\t\\\"command\\\": \\\"-workbench.action.quickOpenNavigatePreviousInFilePicker\\\",\\n\\t\\t\\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+c\\\",\\n\\t\\t\\\"command\\\": \\\"-remote.tunnel.copyAddressInline\\\",\\n\\t\\t\\\"when\\\": \\\"tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+c\\\",\\n\\t\\t\\\"command\\\": \\\"-problems.action.copy\\\",\\n\\t\\t\\\"when\\\": \\\"problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+c\\\",\\n\\t\\t\\\"command\\\": \\\"-keybindings.editor.copyKeybindingEntry\\\",\\n\\t\\t\\\"when\\\": \\\"inKeybindings && keybindingFocus && !whenFocus\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+c\\\",\\n\\t\\t\\\"command\\\": \\\"-search.action.copyMatch\\\",\\n\\t\\t\\\"when\\\": \\\"fileMatchOrMatchFocus\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+c\\\",\\n\\t\\t\\\"command\\\": \\\"editor.action.commentLine\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+7\\\",\\n\\t\\t\\\"command\\\": \\\"-editor.action.commentLine\\\",\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+c\\\",\\n\\t\\t\\\"command\\\": \\\"-workbench.action.terminal.copySelection\\\",\\n\\t\\t\\\"when\\\": \\\"terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused\\\"\\n\\t}\\n]\",\"windows\":\"// Place your key bindings in this file to override the defaultsauto[]\\r\\n[\\r\\n  // Toggle Zen Mode\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+e\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.toggleZenMode\\\"\\r\\n  },\\r\\n\\r\\n  // Toggle Terminal (Ã±)\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+[Semicolon]\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.terminal.toggleTerminal\\\",\\r\\n    \\\"when\\\": \\\"terminal.active\\\"\\r\\n  },\\r\\n\\r\\n  // Close current focused file in the editor\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.closeActiveEditor\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus\\\"\\r\\n  },\\r\\n\\r\\n  // Comment code\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+c\\\",\\r\\n    \\\"command\\\": \\\"editor.action.commentLine\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\r\\n  },\\r\\n\\r\\n  // Format Document\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+f\\\",\\r\\n    \\\"command\\\": \\\"editor.action.formatDocument\\\",\\r\\n    \\\"when\\\": \\\"editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor\\\"\\r\\n  },\\r\\n\\r\\n  // Scroll Down in popup lists\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"list.focusDown\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"down\\\",\\r\\n    \\\"command\\\": \\\"-list.focusDown\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"list.scrollDown\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'\\\"\\r\\n  },\\r\\n\\r\\n  // Scroll Up in popup lists\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"list.focusUp\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"up\\\",\\r\\n    \\\"command\\\": \\\"-list.focusUp\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"list.scrollUp\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'\\\"\\r\\n  },\\r\\n\\r\\n  // Tabs hopping\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+tab\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigateNextInEditorPicker\\\",\\r\\n    \\\"when\\\": \\\"inEditorsPicker && inQuickOpen\\\"\\r\\n  },\\r\\n\\r\\n  // Terminals hopping\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+tab\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.terminal.focusNext\\\",\\r\\n    \\\"when\\\": \\\"terminalFocus\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+tab\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.terminal.focusPrevious\\\",\\r\\n    \\\"when\\\": \\\"terminalFocus\\\"\\r\\n  },\\r\\n\\r\\n  // Explorer\\r\\n  // New Folder\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+n\\\",\\r\\n    \\\"command\\\": \\\"explorer.newFolder\\\"\\r\\n  },\\r\\n\\r\\n  // New File\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+n\\\",\\r\\n    \\\"command\\\": \\\"explorer.newFile\\\"\\r\\n  },\\r\\n\\r\\n  // Toggle file explorer with \\\"halflife-console\\\" key and manages the focus\\r\\n  // If Explorer is visible, close it\\r\\n  {\\r\\n    \\\"key\\\": \\\"oem_5\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.closeSidebar\\\",\\r\\n    \\\"when\\\": \\\"explorerViewletVisible\\\"\\r\\n  },\\r\\n  // If Explorer is not visible, open it and focus\\r\\n  {\\r\\n    \\\"key\\\": \\\"oem_5\\\",\\r\\n    \\\"command\\\": \\\"workbench.view.explorer\\\",\\r\\n    \\\"when\\\": \\\"!explorerViewletVisible\\\"\\r\\n  },\\r\\n\\r\\n  // Text Zoom - Zoom In\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+oem_plus\\\",\\r\\n    \\\"command\\\": \\\"editor.action.fontZoomIn\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+numpad_add\\\",\\r\\n    \\\"command\\\": \\\"editor.action.fontZoomIn\\\"\\r\\n  },\\r\\n\\r\\n  // Text Zoom - Zoom Out\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+oem_minus\\\",\\r\\n    \\\"command\\\": \\\"editor.action.fontZoomOut\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+numpad_subtract\\\",\\r\\n    \\\"command\\\": \\\"editor.action.fontZoomOut\\\"\\r\\n  },\\r\\n\\r\\n  // UI Zoom - Zoom In\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+oem_plus\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.zoomIn\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+numpad_add\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.zoomIn\\\"\\r\\n  },\\r\\n\\r\\n  // UI Zoom - Zoom Out\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+oem_minus\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.zoomOut\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+numpad_subtract\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.zoomOut\\\"\\r\\n  },\\r\\n\\r\\n  // GOTO Definition\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+g\\\",\\r\\n    \\\"command\\\": \\\"editor.action.revealDefinition\\\",\\r\\n    \\\"when\\\": \\\"editorHasDefinitionProvider && editorTextFocus\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"f12\\\",\\r\\n    \\\"command\\\": \\\"-editor.action.revealDefinition\\\",\\r\\n    \\\"when\\\": \\\"editorHasDefinitionProvider && editorTextFocus\\\"\\r\\n  },\\r\\n\\r\\n  // Neovim \\\"0\\\" goes to the first char in the line, not just the beginning of the line\\r\\n  {\\r\\n    \\\"command\\\": \\\"vscode-neovim.send\\\",\\r\\n    \\\"key\\\": \\\"0\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && neovim.mode == 'normal'\\\",\\r\\n    \\\"args\\\": \\\":normal ^<CR>\\\"\\r\\n  },\\r\\n\\r\\n  // CTRL + A selects all the doc's text\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+a\\\",\\r\\n    \\\"command\\\": \\\"editor.action.selectAll\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus\\\"\\r\\n  },\\r\\n\\r\\n  // Toggle unfolding\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+f\\\",\\r\\n    \\\"command\\\": \\\"editor.toggleFold\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && neovim.mode == 'normal'\\\"\\r\\n  },\\r\\n\\r\\n  // Page Up\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+u\\\",\\r\\n    \\\"command\\\": \\\"cursorPageUp\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"pageup\\\",\\r\\n    \\\"command\\\": \\\"cursorPageUp\\\"\\r\\n  },\\r\\n\\r\\n  // Page Down\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+d\\\",\\r\\n    \\\"command\\\": \\\"cursorPageDown\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"pagedown\\\",\\r\\n    \\\"command\\\": \\\"cursorPageDown\\\"\\r\\n  },\\r\\n\\r\\n  // Go Down in pop-up lists\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"selectNextSuggestion\\\",\\r\\n    \\\"when\\\": \\\"suggestWidgetVisible\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenSelectNext\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen\\\"\\r\\n  },\\r\\n\\r\\n  // Go Up in pop-up lists\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"selectPrevSuggestion\\\",\\r\\n    \\\"when\\\": \\\"suggestWidgetVisible\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenSelectPrevious\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen\\\"\\r\\n  },\\r\\n\\r\\n  // Neovim \\\"0\\\" goes to the first char in the line, not just the beginning of the line\\r\\n  {\\r\\n    \\\"command\\\": \\\"vscode-neovim.send\\\",\\r\\n    \\\"key\\\": \\\"0\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && neovim.mode == 'normal'\\\",\\r\\n    \\\"args\\\": \\\":normal ^<CR>\\\"\\r\\n  },\\r\\n\\r\\n  // CTRL + A selects all the doc's text\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+a\\\",\\r\\n    \\\"command\\\": \\\"editor.action.selectAll\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus\\\"\\r\\n  },\\r\\n\\r\\n  // Shift+7 (/) opens search only in editor Normal/Visual mode (Neovim)\\r\\n  {\\r\\n    \\\"key\\\": \\\"shift+7\\\",\\r\\n    \\\"command\\\": \\\"actions.find\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && neovim.mode != 'insert'\\\"\\r\\n  }\\r\\n]\"}"}}