{"version":2,"content":"{\"windows\":\"// Place your key bindings in this file to override the defaultsauto[]\\r\\n[\\r\\n  {\\r\\n    \\\"key\\\": \\\"[Backquote]\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.toggleZenMode\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k z\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.toggleZenMode\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+e\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.toggleSidebarVisibility\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+b\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.toggleSidebarVisibility\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+[Semicolon]\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.terminal.toggleTerminal\\\",\\r\\n    \\\"when\\\": \\\"terminal.active\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+`\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.terminal.toggleTerminal\\\",\\r\\n    \\\"when\\\": \\\"terminal.active\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"-vscode-neovim.send\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"-vscode-neovim.send-cmdline\\\",\\r\\n    \\\"when\\\": \\\"neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"-vscode-neovim.send\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+u\\\",\\r\\n    \\\"command\\\": \\\"-vscode-neovim.ctrl-u\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k ctrl+c\\\",\\r\\n    \\\"command\\\": \\\"-editor.action.addCommentLine\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+c\\\",\\r\\n    \\\"command\\\": \\\"editor.action.commentLine\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+7\\\",\\r\\n    \\\"command\\\": \\\"-editor.action.commentLine\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"-extension.vim_ctrl+w\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"-extension.vim_ctrl+k\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+f\\\",\\r\\n    \\\"command\\\": \\\"-extension.vim_ctrl+f\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+f\\\",\\r\\n    \\\"command\\\": \\\"-keybindings.editor.searchKeybindings\\\",\\r\\n    \\\"when\\\": \\\"inKeybindings\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+p\\\",\\r\\n    \\\"command\\\": \\\"-extension.vim_ctrl+p\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.togglePanel\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+u\\\",\\r\\n    \\\"command\\\": \\\"-cursorUndo\\\",\\r\\n    \\\"when\\\": \\\"textInputFocus\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+u\\\",\\r\\n    \\\"command\\\": \\\"-list.focusPageUp\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+f\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.findInFiles\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+f\\\",\\r\\n    \\\"command\\\": \\\"-workbench.view.search\\\",\\r\\n    \\\"when\\\": \\\"workbench.view.search.active && neverMatch =~ /doesNotMatch/\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+f\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.terminal.searchWorkspace\\\",\\r\\n    \\\"when\\\": \\\"terminalFocus && terminalProcessSupported && terminalTextSelected\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+f\\\",\\r\\n    \\\"command\\\": \\\"editor.action.formatDocument\\\",\\r\\n    \\\"when\\\": \\\"editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"shift+alt+f\\\",\\r\\n    \\\"command\\\": \\\"-editor.action.formatDocument\\\",\\r\\n    \\\"when\\\": \\\"editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"editor.action.selectNextStickyScrollLine\\\",\\r\\n    \\\"when\\\": \\\"stickyScrollFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"down\\\",\\r\\n    \\\"command\\\": \\\"-editor.action.selectNextStickyScrollLine\\\",\\r\\n    \\\"when\\\": \\\"stickyScrollFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"editor.action.scrollDownHover\\\",\\r\\n    \\\"when\\\": \\\"editorHoverFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"down\\\",\\r\\n    \\\"command\\\": \\\"-editor.action.scrollDownHover\\\",\\r\\n    \\\"when\\\": \\\"editorHoverFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"list.focusDown\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"down\\\",\\r\\n    \\\"command\\\": \\\"-list.focusDown\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"list.scrollDown\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+down\\\",\\r\\n    \\\"command\\\": \\\"-list.scrollDown\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"list.scrollUp\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+up\\\",\\r\\n    \\\"command\\\": \\\"-list.scrollUp\\\",\\r\\n    \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenNavigateNextInEditorPicker\\\",\\r\\n    \\\"when\\\": \\\"inEditorsPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+tab\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigateNextInEditorPicker\\\",\\r\\n    \\\"when\\\": \\\"inEditorsPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenNavigateNextInFilePicker\\\",\\r\\n    \\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+e\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigateNextInFilePicker\\\",\\r\\n    \\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+p\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigateNextInFilePicker\\\",\\r\\n    \\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenNavigateNextInRecentFilesPicker\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen && inRecentFilesPicker\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+r\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigateNextInRecentFilesPicker\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen && inRecentFilesPicker\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+j\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenNavigateNextInViewPicker\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen && inViewsPicker\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+q\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigateNextInViewPicker\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen && inViewsPicker\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenNavigatePreviousInEditorPicker\\\",\\r\\n    \\\"when\\\": \\\"inEditorsPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+tab\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigatePreviousInEditorPicker\\\",\\r\\n    \\\"when\\\": \\\"inEditorsPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenNavigatePreviousInFilePicker\\\",\\r\\n    \\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+e\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigatePreviousInFilePicker\\\",\\r\\n    \\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+p\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigatePreviousInFilePicker\\\",\\r\\n    \\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenNavigatePreviousInRecentFilesPicker\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen && inRecentFilesPicker\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+r\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen && inRecentFilesPicker\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+k\\\",\\r\\n    \\\"command\\\": \\\"workbench.action.quickOpenNavigatePreviousInViewPicker\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen && inViewsPicker\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+shift+q\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.quickOpenNavigatePreviousInViewPicker\\\",\\r\\n    \\\"when\\\": \\\"inQuickOpen && inViewsPicker\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"-vscode-neovim.send-cmdline\\\",\\r\\n    \\\"when\\\": \\\"neovim.init && neovim.mode == 'cmdline'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"-vscode-neovim.send\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && neovim.ctrlKeysNormal.w && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"-workbench.action.terminal.killEditor\\\",\\r\\n    \\\"when\\\": \\\"terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"-vscode-neovim.send\\\",\\r\\n    \\\"when\\\": \\\"editorTextFocus && neovim.ctrlKeysInsert.w && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"key\\\": \\\"ctrl+r ctrl+w\\\",\\r\\n    \\\"command\\\": \\\"-vscode-neovim.send-cmdline\\\",\\r\\n    \\\"when\\\": \\\"neovim.init && neovim.mode == 'cmdline'\\\"\\r\\n  }\\r\\n]\"}"}