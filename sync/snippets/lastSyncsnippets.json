{"ref":"6d4c8ae8-f689-4397-90f4-dfde14770ed1","syncData":{"version":1,"machineId":"f1d20590-5954-4e8b-9626-017413fc5b89","content":"{\"bat.json\":\"{\\n\\t// Place your snippets for bat here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"cs.code-snippets\":\"{\\n  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and\\n  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope\\n  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is\\n  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.\\n  // Placeholders with the same ids are connected.\\n  // Example:\\n  \\\"Print to Console\\\": {\\n    \\\"scope\\\": \\\"javascript,typescript\\\",\\n    \\\"prefix\\\": \\\"cs\\\",\\n    \\\"body\\\": [\\\"console.log($1)\\\"],\\n    \\\"description\\\": \\\"Log output to console\\\"\\n  },\\n\\n  \\\"Get HTML Element by ID\\\": {\\n    \\\"scope\\\": \\\"javascript,typescript\\\",\\n    \\\"prefix\\\": \\\"gei\\\",\\n    \\\"body\\\": [\\\"document.getElementById('$2')\\\"],\\n    \\\"description\\\": \\\"Get HTML Element by ID\\\"\\n  },\\n\\n  \\\"Console log for debugging\\\": {\\n    \\\"scope\\\": \\\"javascript,typescript\\\",\\n    \\\"prefix\\\": \\\"db\\\",\\n    \\\"body\\\": \\\"console.log('[DEBUG] $varName: ' + $varName)\\\",\\n    \\\"description\\\": \\\"Create a debug console log\\\"\\n  },\\n\\n  \\\"Create HTML element\\\": {\\n    \\\"scope\\\": \\\"javascript,typescript\\\",\\n    \\\"prefix\\\": \\\"cr\\\",\\n    \\\"body\\\": \\\"document.createElement('$2')\\\",\\n    \\\"description\\\": \\\"Create HTML element from JS\\\"\\n  },\\n\\n  \\\"Add event listener\\\": {\\n    \\\"scope\\\": \\\"javascript,typescript\\\",\\n    \\\"prefix\\\": \\\".evl\\\",\\n    \\\"body\\\": [\\\".addEventListener('$1', () => {\\\", \\\"$2\\\", \\\"})\\\"],\\n    \\\"description\\\": \\\"Add an event listener to element.\\\"\\n  },\\n\\n  \\\"Insert Template Literal\\\": {\\n    \\\"scope\\\": \\\"javascript,typescript\\\",\\n    \\\"prefix\\\": \\\"templ\\\",\\n    \\\"body\\\": [\\\"`${$1}`\\\"],\\n    \\\"description\\\": \\\"Add an event listener to element.\\\"\\n  }\\n}\\n\",\"javascript.json\":\"{\\n\\t// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"log.code-snippets\":\"\"}"}}