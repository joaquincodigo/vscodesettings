{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Print to Console": {
    "scope": "javascript,typescript",
    "prefix": "cs",
    "body": [
      "console.log($1)"
    ],
    "description": "Log output to console"
  },
  "Get HTML Element by ID": {
    "scope": "javascript,typescript",
    "prefix": "gei",
    "body": [
      "document.getElementById('$2')"
    ],
    "description": "Get HTML Element by ID"
  },
  "Console log for debugging": {
    "scope": "javascript,typescript",
    "prefix": "db",
    "body": "console.log('[DEBUG] $varName: ' + $varName)",
    "description": "Create a debug console log"
  },
  "Create HTML element": {
    "scope": "javascript,typescript",
    "prefix": "cr",
    "body": "document.createElement('$2')",
    "description": "Create HTML element from JS"
  },
  "Add event listener": {
    "scope": "javascript,typescript",
    "prefix": ".evl",
    "body": [
      ".addEventListener('$1', () => {",
      "$2",
      "})"
    ],
    "description": "Add an event listener to element."
  },
  "Insert Template Literal": {
    "scope": "javascript,typescript",
    "prefix": "templ",
    "body": [
      "`${$1}`"
    ],
    "description": "Add an event listener to element."
  },
  "Insert Template Literal for JSX": {
    "scope": "javascript,typescript",
    "prefix": "backtick",
    "body": [
      "{`$1${}`}"
    ],
    "description": "Insert a JSX template literal"
  },
  "Insert Testing Comment": {
    "prefix": "testing",
    "body": [
      "// TESTING-TESTING-TESTING-TESTING-TESTING-TESTING",
      "$TM_SELECTED_TEXT",
      "// TESTING-TESTING-TESTING-TESTING-TESTING-TESTING"
    ],
    "description": "Wraps selected text with a testing comment"
  },
  "Loading Skeleton Placeholder": {
    "prefix": "code",
    "body": [
      "// ############################################",
      "// ############################################",
      "// ############################################"
    ],
    "description": "Inserts a loading skeleton placeholder comment"
  }
}